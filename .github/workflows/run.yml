name: Run News Scraper and Send to n8n

on:
  workflow_dispatch:
    inputs:
      resumeUrl: # ESTE ES EL INPUT QUE N8N NECESITA
        description: 'n8n Webhook URL to signal completion'
        required: true
        type: string

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    # Ya no necesitas WEBHOOK_URL aquí, se usa el resumeUrl
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run scraper and capture JSON output
        # El '>' guarda SOLAMENTE la salida de stdout (el JSON) en out.json. 
        # Los logs van a stderr y son ignorados aquí.
        run: |
          python3 news_scraper.py > out.json

      - name: Post results to n8n (using resumeUrl)
        # Este paso SÓLO se ejecuta si el scraper anterior fue exitoso
        if: success()
        run: |
          RESUME_URL=${{ github.event.inputs.resumeUrl }}

          if [ -z "$RESUME_URL" ]; then
            echo "Error: resumeUrl no fue proporcionado. Terminando."
            exit 0
          fi
          
          # Se envía el contenido puro de out.json a la URL de n8n
          curl -sS -X POST "$RESUME_URL" \
               -H "Content-Type: application/json" \
               --data-binary @out.json
